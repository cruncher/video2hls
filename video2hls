#!/usr/bin/env python3


import glob
import logging
import logging.handlers
import os
import shutil
import sys

from video2hls_lib import fix_options, parse_args, poster, probe, transcode


logger = logging.getLogger("video2hls")


if __name__ == "__main__":
    options = parse_args()

    try:
        # Create output directory
        try:
            logger.debug(f"create directory {options.output}")
            os.makedirs(options.output)
        except FileExistsError:
            if options.output_overwrite:
                logger.info(f"delete existing {options.output}")
                shutil.rmtree(options.output)
                os.makedirs(options.output)
            else:
                raise

        # Change directory
        options.input = os.path.relpath(options.input, options.output)
        os.chdir(options.output)

        # Probe input file
        technical = probe(options)
        if technical["video"] is None:
            raise RuntimeError(f"no video track in {options.input}")
        if not technical["audio"] and options.audio_only:
            raise RuntimeError(
                f"no audio track in {options.input}, " "cannot do an audio only variant"
            )
        if not technical["audio"] and options.audio_separate:
            raise RuntimeError(
                f"no audio track in {options.input}, "
                "cannot do a separate audio track"
            )

        # Fix options to match input video
        fix_options(options, technical)
        logger.debug("current settings:")
        for k, v in vars(options).items():
            logger.debug(f" {k} = {v}")

        # Generate output files
        poster(options, technical)
        transcode(options, technical)

        for f in glob.glob("_*"):
            os.remove(f)

    except Exception as e:
        logger.exception("%s", e)
        sys.exit(1)
